{"version":3,"file":"static/js/258.fdbe86e2.chunk.js","mappings":"2RAGaA,EAAUC,EAAAA,GAAAA,IAAH,kHAOPC,EAAYD,EAAAA,GAAAA,IAAH,8EAKTE,EAAUF,EAAAA,GAAAA,IAAH,8CAIPG,EAAaH,EAAAA,GAAAA,IAAH,oFAKVI,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4P,SCqEzB,EAlFsB,WAAO,IAAD,IAClBM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBC,MAOlCC,EAOER,EAPFQ,KACAC,EAMET,EANFS,MACAC,EAKEV,EALFU,aACAC,EAIEX,EAJFW,YACAC,EAGEZ,EAHFY,aACAC,EAEEb,EAFFa,SACAC,EACEd,EADFc,OAGIC,EAAQ,gBAAYlB,GAkB1B,OAhBAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,8GAEwBC,EAAAA,EAAAA,GAAS,CAAEJ,SAAAA,EAAUE,WAAAA,IAF7C,OAEUG,EAFV,OAGInB,EAAQmB,EAAMC,MAHlB,oIAFc,sBAWd,OAXc,mCAUdC,GACO,WACLL,EAAWM,OACZ,CACF,GAAE,CAACR,KAGF,UAACzB,EAAD,YACE,SAACK,EAAD,CAAc6B,GAAE,UAAEpB,EAAKqB,eAAP,QAAkB,IAAlC,qBACU,KAATzB,IACC,iCACE,UAACR,EAAD,YACE,0BACE,gBACEkC,IAAG,yCAAoCf,GACvCgB,IAAI,GACJC,MAAM,WAIV,UAACnC,EAAD,YACE,iCACGe,QADH,IACGA,EAAAA,EAAQC,EADX,KACoBC,EAAamB,MAAM,EAAG,GAD1C,QAGA,wCAA+B,GAAfjB,EAAhB,QACA,qCACA,uBAAIC,KACJ,mCACA,uBAAIC,EAAOgB,KAAI,gBAAGrB,EAAH,EAAGA,MAAOD,EAAV,EAAUA,KAAV,cAAqBC,QAArB,IAAqBA,EAAAA,EAASD,CAA9B,IAAoCuB,KAAK,cAG5D,UAACrC,EAAD,YACE,oDACA,wBA3DS,CACjB,CAAEsC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YA0DHH,KAAI,gBAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACd,yBACE,SAAC,KAAD,CAAMT,GAAIQ,EAAV,SAAiBC,KADVD,EADK,UAOpB,SAAC,EAAAE,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,WAMX,C","sources":["Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  box-shadow: 0 5px 5px -5px #333;\n`;\n\nexport const Details = styled.div`\n  margin-left: 14px;\n`;\n\nexport const Additional = styled.div`\n  margin-bottom: 10px;\n  box-shadow: 0 5px 5px -5px #333;\n`;\n\nexport const PreviousPage = styled(Link)`\n  display: block;\n  width: 70px;\n  color: blue;\n  text-decoration: none;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  :hover {\n    color: red;\n  }\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { getFilms } from 'services/Api';\nimport {\n  Wrapper,\n  PreviousPage,\n  MovieCard,\n  Details,\n  Additional,\n} from './MovieDetails.styled';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [info, setinfo] = useState('');\n  const location = useLocation();\n  const back = useRef(location.state?.from);\n\n  const additional = [\n    { href: 'cast', text: 'Cast' },\n    { href: 'reviews', text: 'Reviews' },\n  ];\n  const {\n    name,\n    title,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = info;\n\n  const pathname = `movie/${id}`;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function select() {\n      try {\n        const Films = await getFilms({ pathname, controller });\n        setinfo(Films.data);\n      } catch (error) {\n        return;\n      }\n    }\n    select();\n    return () => {\n      controller.abort();\n    };\n  }, [pathname]);\n\n  return (\n    <Wrapper>\n      <PreviousPage to={back.current ?? '/'}>Go back</PreviousPage>\n      {info !== '' && (\n        <>\n          <MovieCard>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                alt=\"\"\n                width=\"200\"\n              ></img>\n            </div>\n\n            <Details>\n              <h2>\n                {name ?? title} ({release_date.slice(0, 4)})\n              </h2>\n              <p>User Score: {vote_average * 10}%</p>\n              <b>Overview</b>\n              <p>{overview}</p>\n              <b>Genres</b>\n              <p>{genres.map(({ title, name }) => title ?? name).join(' ')}</p>\n            </Details>\n          </MovieCard>\n          <Additional>\n            <h3>Additional information</h3>\n            <ul>\n              {additional.map(({ href, text }) => (\n                <li key={href}>\n                  <Link to={href}>{text}</Link>\n                </li>\n              ))}\n            </ul>\n          </Additional>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["Wrapper","styled","MovieCard","Details","Additional","PreviousPage","Link","id","useParams","useState","info","setinfo","location","useLocation","back","useRef","state","from","name","title","release_date","poster_path","vote_average","overview","genres","pathname","useEffect","controller","AbortController","getFilms","Films","data","select","abort","to","current","src","alt","width","slice","map","join","href","text","Suspense","fallback"],"sourceRoot":""}